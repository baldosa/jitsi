meet_domain: jitsi.example.com
vault_token_auth_appsecret: AppSekrit

le_email: office@example.com
debian_certbot: true
# Auth (none, ldap, token)
xmpp_auth: none
allow_guests: false

# Token configuration
token_auth_appid: YOUR_APP_ID
token_auth_appsecret: "{{ vault_token_auth_appsecret }}"

## LDAP configuration
saslauthd_ldap_config: |
  ldap_servers: ldap://127.0.0.1/
  ldap_search_base: ou=PEOPLE,dc=example.com,dc=ES
  ldap_filter: (uid=%u)
  ldap_version: 3
  ldap_auth_method: bind

use_included_jitsi_gpg_key: false

## Recording
enable_recording: false
add_participants_metadata: false
# Script to execute after recording is finished

## octo support
octo_enabled: false
octo_strategy: RegionBasedBridgeSelectionStrategy
octo_bind_port: 4096
octo_region: none

channelLastN: -1
defaultLanguage: en

# Jicofo
jicofo_user: focus
jicofo_pass: "{{ vault_jicofo_pass }}"
jicofo_secret: "{{ vault_jicofo_secret }}"

## Optional components

## prometheus jvb exporter (installs docker and runs a container for it)
run_exporter_container: false
exporter_xmpp_user: prometheus
exporter_xmpp_pass: "{{ vault_exporter_xmpp_pass }}"

## Videobridge XMPP credetials (if running jvb in this host)
videobridge_user: jvb_username
videobridge_pass: "{{ vault_videobridge_pass }}"
videobridge_muc_nick: jvb_nickname
## with the default route (as in "the default IP address")
# octo_bind_address:
## network and there's some kind of NAT from this IP address to the bind_address
# octo_public_address:

## Jibri XMPP credetials (if running jibri in this host)
jibri_user: jibri_username
jibri_pass: "{{ vault_jibri_pass }}"
# Set this to something different that "videobridge_user" if you want to share
# videobridge_user and videobridge_pass across different videobridges
jibri_muc_nick: jibri_nickname

## Required vars for central host
vault_jicofo_pass: jicofoPassword
vault_jicofo_secret: jicofoSecret
vault_exporter_xmpp_pass: exporterXmppPassword

vault_videobridge_pass: VideobridgePassword
vault_jibri_pass: JibriPassword
